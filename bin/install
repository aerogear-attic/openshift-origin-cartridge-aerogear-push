#!/bin/bash -eu

source $OPENSHIFT_AEROGEAR_PUSH_DIR/bin/util

case "$1" in
  -v|--version)
    version="$2"
esac

echo "$version" > "$OPENSHIFT_AEROGEAR_PUSH_DIR/env/OPENSHIFT_AEROGEAR_PUSH_VERSION"

ln -s ${OPENSHIFT_AEROGEAR_PUSH_DIR}/standalone/log ${OPENSHIFT_AEROGEAR_PUSH_DIR}/logs

# Install the UnifiedPush Server WARs (auth and core)
cp ${OPENSHIFT_AEROGEAR_PUSH_DIR}/versions/${version}/standalone/deployments/ROOT.war $OPENSHIFT_AEROGEAR_PUSH_DIR/standalone/deployments
cp ${OPENSHIFT_AEROGEAR_PUSH_DIR}/versions/${version}/standalone/deployments/auth-server.war $OPENSHIFT_AEROGEAR_PUSH_DIR/standalone/deployments
cp ${OPENSHIFT_AEROGEAR_PUSH_DIR}/versions/${version}/standalone/deployments/ag-push.war $OPENSHIFT_AEROGEAR_PUSH_DIR/standalone/deployments

# Add the AeroGear SimplePush module
mkdir -p ${OPENSHIFT_AEROGEAR_PUSH_DIR}/usr/modules/org/jboss/aerogear/simplepush/main
ln -s ${OPENSHIFT_AEROGEAR_PUSH_DIR}/versions/${version}/modules/system/layers/base/org/jboss/aerogear/simplepush/main/* ${OPENSHIFT_AEROGEAR_PUSH_DIR}/usr/modules/org/jboss/aerogear/simplepush/main

# Generate the token key for SimplePush
token_key=$(generate_password)
echo "$token_key" > ${OPENSHIFT_AEROGEAR_PUSH_DIR}/env/OPENSHIFT_AEROGEAR_PUSH_TOKEN_KEY

client_result ""
client_result "Aerogear Push Server added.  Please make note of these default credentials:"
client_result ""
client_result "           User: admin"
client_result "       Password: 123"
client_result " Connection URL: https://$OPENSHIFT_APP_DNS/ag-push"
client_result ""

#JBOSS_HOME=/etc/alternatives/jbossas-$version
#pushd OPENSHIFT_AEROGEAR_PUSH_DIR 1> /dev/null
#  ln -s ${JBOSS_HOME}/jboss-modules.jar
#  ln -s ${JBOSS_HOME}/modules
#popd 1> /dev/null

touch ${OPENSHIFT_AEROGEAR_PUSH_DIR}/env/OPENSHIFT_AEROGEAR_PUSH_CLUSTER
#touch ${OPENSHIFT_AEROGEAR_PUSH_DIR}/env/OPENSHIFT_JBOSSAS_CLUSTER_REMOTING

update-configuration java7

# # Install Oracle JDK 8 (this should be removed once OpenShift provides support for JDK 8)
# pushd $OPENSHIFT_AEROGEAR_PUSH_DIR/usr/lib/jvm > /dev/null
#     if wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u5-b13/jdk-8u5-linux-i586.tar.gz > /dev/null; then
#         tar -xzf jdk-8u5-linux-i586.tar.gz
#         rm jdk-8u5-linux-i586.tar.gz
#         update-configuration java8
#     else
#         # Just in case the install fails for some reason
#         client_message "JDK 8 could not be installed, defaulting to JDK 7 instead"
#         mv ${OPENSHIFT_AEROGEAR_PUSH_DIR}/template/.openshift/markers/java8 ${OPENSHIFT_AEROGEAR_PUSH_DIR}/template/.openshift/markers/java7
#         sed -i "s/<maven.compiler.source>1.8<\/maven.compiler.source>/<maven.compiler.source>1.7<\/maven.compiler.source>/g" ${OPENSHIFT_AEROGEAR_PUSH_DIR}/template/pom.xml
#         sed -i "s/<maven.compiler.target>1.8<\/maven.compiler.target>/<maven.compiler.target>1.7<\/maven.compiler.target>/g" ${OPENSHIFT_AEROGEAR_PUSH_DIR}/template/pom.xml
#         sed -i '/<maven.compiler.executable>${env.OPENSHIFT_AEROGEAR_PUSH_DIR}usr\/lib\/jvm\/jdk1.8.0_05\/bin\/javac<\/maven.compiler.executable>/d' ${OPENSHIFT_AEROGEAR_PUSH_DIR}/template/pom.xml
#         sed -i '/<maven.compiler.fork>true<\/maven.compiler.fork>/d' ${OPENSHIFT_AEROGEAR_PUSH_DIR}/template/pom.xml
#         update-configuration java7
#     fi
# popd > /dev/null
